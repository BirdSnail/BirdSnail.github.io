# Redis

## redis持久化

- RDB全量
  - 指定的间隔保存那个时间点的一个数据快照。
  - 有数据丢失的风险
- AOF增量

- 两种持久化策略可以同时存在，重启时AOF文件优先被用于重建数据，因为它是最完整 的。

## 全量持久化

优点：

- 可以指定间隔来进行持久话，再故障恢复时可以轻松还原数据集的不同版本。
- 很适合备份，单文件可以上传到远程存储上面。
- 性能好，再备份时会fork出一个子进程，持久话的工作交给子进程，自己不会有相关IO操作。
- 比起AOF，重启速度更快。

缺点:

- 数据丢失风险
- fork子进程进行持久化，如果数据较大，将子进程fork出来需要一定的时间。如果数据量大且CPU性能不好，Redis停止服务的时间更长。

使用方法：

- 编辑`redis.conf`文件

```bash
# RDB文件名，默认为dump.rdb。
dbfilename dump.rdb

# 文件存放的目录，AOF文件同样存放在此目录下。默认为当前工作目录。
dir ./

# 格式为：save <seconds> <changes>
# 可以设置多个。
save 900 1 #900秒后至少1个key有变动
save 300 10 #300秒后至少10个key有变动
save 60 10000 #60秒后至少10000个key有变动
```

## 增量持久化

优点：灵活、快速

- 比RDB更加可靠，可以定制不同的`fsync`策略，默认每秒fsync一次，意味着最多丢失一秒的数据。

- AOF日志文件是一个纯追加的文件，即使突然断电也不会出现日志的丁文或者损坏的问题。

缺点:

- AOF文件更大
- 某些fsync策略下，性能没有RDB好。

使用：

编辑redis.conf文件

```shell
# 文件存放目录，与RDB共用。默认为当前工作目录。
dir ./

# 默认文件名为appendonly.aof
appendfilename "appendonly.aof"

appendonly yes
```

